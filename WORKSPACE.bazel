load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
load("@bazel_tools//tools/build_defs/repo:git.bzl", "git_repository")

http_archive(
    name = "aspect_rules_js",
    sha256 = "3ad6684d744ebbc6592d404cc3aa81d0da634eccb3499f6fd198ae122fa28489",
    strip_prefix = "rules_js-1.19.0",
    url = "https://github.com/aspect-build/rules_js/releases/download/v1.19.0/rules_js-v1.19.0.tar.gz",
)

load("@aspect_rules_js//js:repositories.bzl", "rules_js_dependencies")
rules_js_dependencies()

load("@rules_nodejs//nodejs:repositories.bzl", "DEFAULT_NODE_VERSION", "nodejs_register_toolchains")
nodejs_register_toolchains(
    name = "nodejs",
    node_version = DEFAULT_NODE_VERSION,
)

load("@aspect_rules_js//npm:npm_import.bzl", "npm_translate_lock")
npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    verify_node_modules_ignored = "//:.bazelignore",
)

load("@npm//:repositories.bzl", "npm_repositories")
npm_repositories()

http_archive(
    name = "aspect_rules_ts",
    sha256 = "db77d904284d21121ae63dbaaadfd8c75ff6d21ad229f92038b415c1ad5019cc",
    strip_prefix = "rules_ts-1.3.0",
    url = "https://github.com/aspect-build/rules_ts/releases/download/v1.3.0/rules_ts-v1.3.0.tar.gz",
)

load("@aspect_rules_ts//ts:repositories.bzl", "rules_ts_dependencies")
rules_ts_dependencies(
    ts_version_from = "//:package.json",
)

git_repository(
  name = "fluent_types",
  remote = "https://github.com/benricheson101/fluent-types.git",
  commit = "1897b578a32231d94460ba031e44d406a47baab3",
)

# local_repository(
#   name = "fluent_types",
#   path = "/Users/benricheson/Documents/code/rust/fluent-types",
# )

load("@fluent_types//:repositories.bzl", "rules_fluent_types_dependencies")
rules_fluent_types_dependencies()

load("@rules_rust//rust:repositories.bzl", "rules_rust_dependencies", "rust_register_toolchains")
load("@rules_rust//crate_universe:defs.bzl", "crates_repository")
rules_rust_dependencies()
rust_register_toolchains(edition = "2021")

# TODO: can I put this in fluent-types somehow?
crates_repository(
    name = "crate_index",
    cargo_lockfile = "@fluent_types//:Cargo.lock",
    manifests = ["@fluent_types//:Cargo.toml"],
)

load("@crate_index//:defs.bzl", "crate_repositories")
crate_repositories()
